CREATE_BACKUP_GRUB_CONFIG() {
	read -p "Create a copy of the current settings before the change? {Saved in /home directory} (yes,no): " BACKUP_RESPONSE
	if [ $BACKUP_RESPONSE = yes ]; then
		if cp -i /etc/default/grub /home; then
			echo Backup in current directory successfully saved.. 			# Создание бекапа текущей конфигурации
		else
			echo Something went wrong...
	fi
fi
}


PRINT_GRUB_VERSION() {
	local CURRENT_GRUB_VERSION=$(grub-install --version | cut -d' ' -f3 | cut -c -4)		# Вывод текущей версии GRUB
	echo "Current version of GRUB: $CURRENT_GRUB_VERSION"
}


PRINT_CURRENT_CONFIGURATION() {
	cat /etc/default/grub | grep -v \# | cat -s
}


SET_DOWNLOAD_POINT() {
	local GRUB_DEFAULT_CURRENT=$(grep -i GRUB_DEFAULT ${CONFIG_GRUB_PATH})

	read -p "Specify the number of the loading point or \"saved\": " GRUB_DEFAULT_RESPONSE

	sed -i "s/$GRUB_DEFAULT_CURRENT/GRUB_DEFAULT=$GRUB_DEFAULT_RESPONSE/g" ${CONFIG_GRUB_PATH}
}


SET_TIMEOUT() {
	local GRUB_TIMEOUT_CURRENT=$(grep -iw GRUB_TIMEOUT ${CONFIG_GRUB_PATH})

	read -p "Enter the time in seconds before the system boots if nothing is selected from the menu : " GRUB_TIMEOUT_RESPONSE

	sed -iw "s/$GRUB_TIMEOUT_CURRENT/GRUB_TIMEOUT=$GRUB_TIMEOUT_RESPONSE/g" ${CONFIG_GRUB_PATH}
}


SET_GFXMODE() {
	local GRUB_GFXMODE_CURRENT=$(grep -i GRUB_GFXMODE ${CONFIG_GRUB_PATH})			# Все текущие значения параметров конфигурации

	read -p "Enter the screen resolution of the bootloader with an x between two numbers: " GRUB_GFXMODE_RESPONS

	sed -i "s/$GRUB_GFXMODE_CURRENT/GRUB_GFXMODE=$GRUB_GFXMODE_RESPONS/g" ${CONFIG_GRUB_PATH}
}


SET_GRUB_DISABLE_RECOVERY() {
	local GRUB_DISABLE_RECOVERY_CURRENT=$(grep -i GRUB_DISABLE_RECOVERY ${CONFIG_GRUB_PATH})

	read -p "Give the ability to enter GRUB at system startup? (yes,no) " GRUB_DISABLE_RECOVERY_RESPONSE

	if [ $GRUB_DISABLE_RECOVERY_RESPONSE = yes ]; then
		sed -i "s/$GRUB_DISABLE_RECOVERY_CURRENT/GRUB_DISABLE_RECOVERY=false/g" ${CONFIG_GRUB_PATH}
	else
		sed -i "s/$GRUB_DISABLE_RECOVERY_CURRENT/GRUB_DISABLE_RECOVERY=true/g" ${CONFIG_GRUB_PATH}
	fi
}


# Set GRUB background image
SET_GRUB_BACKGROUND() {
	local GRUB_BACKGROUND_CURRENT=$(grep -i GRUB_BACKGROUND ${CONFIG_GRUB_PATH} | sed 's_\/_\\\/_g')

	read -p "Enter the full path to the image for GRUB: " FULL_IMAGE_PATH
	
	FULL_IMAGE_PATH=$(echo $FULL_IMAGE_PATH | sed 's_\/_\\\/_g')
	
	if grep -q GRUB_BACKGROUND ${CONFIG_GRUB_PATH}; then
		sed -i "s/$GRUB_BACKGROUND_CURRENT/GRUB_BACKGROUND=$FULL_IMAGE_PATH/g" ${CONFIG_GRUB_PATH}
	else
		echo "GRUB_BACKGROUND=$FULL_IMAGE_PATH" >> ${CONFIG_GRUB_PATH}
	fi
}


SET_KERNEL_MESSG_AND_LOGO() {
	local GRUB_CMDLINE_LINUX_DEFAULT_CURRENT=$(grep -i GRUB_CMDLINE_LINUX_DEFAULT ${CONFIG_GRUB_PATH})

	read -p "Show kernel messages on startup? (yes,no) " GRUB_KERNEL_MESSAGE
	read -p "Show the logo on startup? (yes,no) " GRUB_SHOW_LOGO

	if [ $GRUB_KERNEL_MESSAGE = yes ] && [ $GRUB_SHOW_LOGO = no ]; then
		local NOT_GRAPHIC_LOADING="\"\""	# Запуск без лого; с сообщениями ядра
		sed -i "s/$GRUB_CMDLINE_LINUX_DEFAULT_CURRENT/GRUB_CMDLINE_LINUX_DEFAULT=$NOT_GRAPHIC_LOADING/g" ${CONFIG_GRUB_PATH}

	elif [ $GRUB_KERNEL_MESSAGE = no ] && [ $GRUB_SHOW_LOGO = yes ]; then
		local GRAPHIC_DISPLAY_LOADING="quiet splash"	# Запуск с лого; без сообщений ядра
		sed -i "s/$GRUB_CMDLINE_LINUX_DEFAULT_CURRENT/GRUB_CMDLINE_LINUX_DEFAULT=\"$GRAPHIC_DISPLAY_LOADING\"/g" ${CONFIG_GRUB_PATH}

	elif [ $GRUB_KERNEL_MESSAGE = yes ] && [ $GRUB_SHOW_LOGO = yes ]; then
		local GRAPHIC_DISPLAY_LOADING_ONLY_LOGO="splash"		# Запуск только с лого; с сообщениями ядра
		sed -i "s/$GRUB_CMDLINE_LINUX_DEFAULT_CURRENT/GRUB_CMDLINE_LINUX_DEFAULT=\"$GRAPHIC_DISPLAY_LOADING_ONLY_LOGO\"/g" ${CONFIG_GRUB_PATH}
		
	else
		local GRAPHIC_DISPLAY_LOADING_WITHOUT_LOGO="quiet" 	# Запуск без лого; без сообщений ядра
		sed -i "s/$GRUB_CMDLINE_LINUX_DEFAULT_CURRENT/GRUB_CMDLINE_LINUX_DEFAULT=\"$GRAPHIC_DISPLAY_LOADING_WITHOUT_LOGO\"/g" ${CONFIG_GRUB_PATH}
	fi
}
